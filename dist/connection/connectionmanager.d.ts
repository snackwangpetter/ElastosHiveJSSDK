import { AuthApi } from "../network/authapi";
import { ServiceEndpoint } from "../serviceendpoint";
import { BackupApi } from "../network/backupapi";
import { DatabaseApi } from "../network/databaseapi";
import { FilesApi } from "../network/filesapi";
import { NodeManageApi } from "../network/nodemanageapi";
import { PaymentApi } from "../network/paymentapi";
import { ScriptingApi } from "../network/scriptingapi";
import { SubscriptionApi } from "../network/subscriptionapi";
export declare class ConnectionManager {
    private static DEFAULT_TIMEOUT;
    private serviceEndpoint;
    private authRequestInterceptor;
    private plainRequestInterceptor;
    private subscriptionApi;
    private paymentApi;
    private databaseApi;
    private authApi;
    private filesApi;
    private scriptingApi;
    private backupApi;
    private nodeManageApi;
    constructor(serviceEndpoint: ServiceEndpoint);
    getServiceEndpoint(): ServiceEndpoint;
    getAuthApi(): AuthApi;
    getNodeManagerApi(): NodeManageApi;
    getFilesApi(): FilesApi;
    getSubscriptionApi(): SubscriptionApi;
    getPaymentApi(): PaymentApi;
    getDatabaseApi(): DatabaseApi;
    getScriptingApi(): ScriptingApi;
    getBackupApi(): BackupApi;
    private static createService;
}
